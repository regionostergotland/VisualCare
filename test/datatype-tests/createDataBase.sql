-- aMySQL Script generated by MySQL Workbench
-- tis 21 feb 2017 17:12:15
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema patientData
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema patientData
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `patientData` DEFAULT CHARACTER SET utf8 ;
USE `patientData` ;

-- -----------------------------------------------------
-- Table `patientData`.`Person`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `patientData`.`Person` ;

CREATE TABLE IF NOT EXISTS `patientData`.`Person` (
  `personNumber` VARCHAR(45) NULL,
  `startDate` DATE NULL,
  `startJob` VARCHAR(45) NULL,
  `startCode` VARCHAR(45) NULL,
  `stopDate` DATE NULL,
  `stopJob` VARCHAR(45) NULL,
  `stopCode` VARCHAR(45) NULL,
  `svfType` VARCHAR(45) NULL,
  `personId` INT NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`personId`))
ENGINE = InnoDB;

USE `patientData` ;

-- -----------------------------------------------------
-- procedure addPerson
-- -----------------------------------------------------

USE `patientData`;
DROP procedure IF EXISTS `patientData`.`addPerson`;

DELIMITER $$
USE `patientData`$$
CREATE PROCEDURE `addPerson` (IN inPersonNumber VARCHAR(45), IN inStartDate DATE, IN inStartJob VARCHAR(45), IN inStartCode VARCHAR(45), IN inStopDate DATE, IN inStopJob VARCHAR(45), IN inStopCode VARCHAR(45), IN inSvfType VARCHAR(45))
BEGIN
	INSERT INTO Person (personNumber, startDate, startJob, startCode, stopDate, stopJob, stopCode, svfType) VALUES (inPersonNumber, inStartDate, inStartJob, inStartCode, inStopDate, inStopJob, inStopCode, inSvfType);
END$$

DELIMITER ;

USE `patientData`;
DROP procedure IF EXISTS `patientData`.`getPerson`;
DELIMITER $$
USE `patientData`$$
CREATE PROCEDURE `getPerson` (IN inPersonId INT)
BEGIN
	SELECT * FROM Person WHERE inPersonId = personId;
END$$

DELIMITER ;

USE `patientData`;
DROP procedure IF EXISTS `patientData`.`getAllPersons`;

DELIMITER $$
USE `patientData`$$
CREATE PROCEDURE `getAllPersons` ()
BEGIN
	SELECT * FROM Person;
END$$

DELIMITER ;

USE `patientData`;
DROP procedure IF EXISTS `patientData`.`clearAllPersons`;

DELIMITER $$
USE `patientData`$$
CREATE PROCEDURE `clearAllPersons` ()
BEGIN
	DELETE FROM Person WHERE 1=1;
END$$
DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
